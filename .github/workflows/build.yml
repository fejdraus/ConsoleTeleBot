name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET 6
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Build Console Projects for Windows
      if: matrix.os == 'ubuntu-latest'
      run: |
        dotnet build ConsoleTeleBotClient/ConsoleTeleBotClient.csproj --configuration Release
        dotnet build ConsoleMock/ConsoleMock.csproj --configuration Release

    - name: Publish Console Projects for macOS
      if: matrix.os == 'macos-latest'
      run: |
        dotnet publish ConsoleTeleBotClient/ConsoleTeleBotClient.csproj -r osx-x64 -c Release /p:PublishSingleFile=true --self-contained true
        dotnet publish ConsoleMock/ConsoleMock.csproj -r osx-x64 -c Release /p:PublishSingleFile=true --self-contained true
    
    - name: Publish Console Projects for Linix
      if: matrix.os == 'ubuntu-latest'
      run: |
        dotnet publish ConsoleTeleBotClient/ConsoleTeleBotClient.csproj -r linux-x64 -c Release /p:PublishSingleFile=true --self-contained true
        dotnet publish ConsoleMock/ConsoleMock.csproj -r linux-x64 -c Release /p:PublishSingleFile=true --self-contained true
        
    - name: Publish Console Projects for Windows
      if: matrix.os == 'windows-latest'
      run: |
        dotnet publish ConsoleTeleBotClient/ConsoleTeleBotClient.csproj -r win-x64 -c Release /p:PublishSingleFile=true --self-contained true
        dotnet publish ConsoleMock/ConsoleMock.csproj -r win-x64 -c Release /p:PublishSingleFile=true --self-contained true     

    - name: Set up Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: '16'
      
    - name: Install Electron.NET CLI
      run: dotnet tool install ElectronNET.CLI -g

    - name: Build Electron.Net + Blazor Project for Windows
      if: matrix.os == 'windows-latest'
      run: |
        cd ConsoleTeleBotWizard
        electronize build /target win /PublishReadyToRun false

    - name: Build Electron.Net + Blazor Project for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd ConsoleTeleBotWizard
        dotnet restore
        electronize build /target linux /PublishReadyToRun false
      
    - name: Build Electron.Net + Blazor Project for macOS
      if: matrix.os == 'macos-latest'
      run: |
        cd ConsoleTeleBotWizard
        dotnet restore
        electronize build /target osx /PublishReadyToRun false
      
